%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: ff771ccdf4150419d9ff4d342b069aae, type: 3}
  m_Name: 02-03_03-ProcComponents_RotationControl-Add
  m_EditorClassIdentifier: 
  Title:
    m_Untranslated: Rotation Control - Adding
  m_Paragraphs:
    m_Items:
    - m_Type: 6
      Title:
        m_Untranslated: 
      Text:
        m_Untranslated: 
      m_Tutorial: {fileID: 0}
      m_Image: {fileID: 0}
      m_Video: {fileID: 0}
      m_CriteriaCompletion: 0
      m_Criteria:
        m_Items: []
      m_MaskingSettings:
        m_MaskingEnabled: 0
        m_UnmaskedViews: []
      m_Summary: 
      m_Description: 
      m_InstructionBoxTitle: 
      m_InstructionText: 
      m_TutorialButtonText: 
    - m_Type: 0
      Title:
        m_Untranslated: 
      Text:
        m_Untranslated: "Let's set up a Rotation Control for your CinemachineCamera.
          We'll use Rotation Composer for now.\nNavigate to your CinemachineCamera,
          then in the <b>Procedural Components</b> section, click on the <b>Rotation
          Control</b> Dropdown and choose <b>Rotation Composer</b>.\n\nThe Rotation
          Composer component rotates the camera to face the target. It also applies
          offsets, damping, and <i>composition rules</i>. \nIt only rotates the camera,
          it never changes the camera's position. Examples of targets for aiming:
          the upper spine or head bone of a character, vehicles, or dummy objects
          which are controlled or animated programmatically.\n\nFor an Orbital Follow,
          you can usually stick with the default settings, but let's explore them
          for learning purposes. Start by resetting the Orbital Follow Axes Values
          to the default center values, then disable the Orbital Follow component
          by unchecking the checkbox.\n\nEditing the Rotation Composer is pretty
          fun, you'll see in a while. Because you can edit values in the Inspector
          Window, <i>or</i> you can edit them via the Game or Scene Window.\n\n<i>Let's
          start with </i><b>Composition</b>\n\n\u2022 <b>Screen Position:</b>\nDetermines
          the screen position (from the center) at which the camera tries to keep
          the target. By default, this is (x: 0, y: 0), representing the center of
          the screen. You can adjust this by changing values in the inspector or
          by dragging the yellow dot around in the Game View.\n(0 is the screen center,
          -0.5 and +0.5 are the screen edges)\n\n\u2022 <b>Dead Zone:</b>\nDefines
          a range within which the camera won't adjust. When the target is within
          this range of the Screen Position, no camera movement occurs. The full
          screen size is 1. \nYou can adjust this from the Game View using the blue
          lines, provided the dead zone value is anything other than 0.\n\n\u2022
          <b>Hard Limits:</b>\nPrevents the target from going beyond specified limits.
          The Size parameter determines the size of the region in which the camera
          can position the target, expressed similarly to the Dead Zone. This region
          is typically centered around the Screen Position but can be shifted using
          the Offset setting.\n\n\u2022 <b>Center On Activate:</b>\nRotates the camera
          to position the target at the center of the dead zone when the camera becomes
          active.\n\n\n<i>Next, let's explore the </i> <b>Target Tracking</b> <i>Settings:</i>\n\n\u2022
          <b>Target Offset:</b>\nRepresents an offset from the center of the Look
          At target in target-local space. This is useful for fine-tuning the target's
          position when the point of interest is not the center of the tracked object.\nYou
          can also use\_<a href=\"https://docs.unity3d.com/Packages/com.unity.cinemachine@3.0/manual/handles.html\">Scene
          Handles</a>\_to modify this property.\n\n\u2022 <b>Lookahead Time:</b>\nAdjust
          the rotation based on the motion of the Look At target. \nThe algorithm
          estimates where the target will be at this many seconds in the future.
          \nBe cautious, as this feature is sensitive to noisy animation. It can
          amplify the noise, resulting in undesirable camera jitter. If the camera
          jitters unacceptably when the target is in motion, turn down this property
          or animate the target more smoothly.\n\n\u2022 <b>Lookahead Smoothing:</b>\nControls
          the smoothness of the lookahead algorithm. Larger values smooth out jittery
          predictions and increase prediction lag.\n\n\u2022 <b>Lookahead Ignore
          Y:</b>\nWhether to ignore movement along the Y axis for lookahead calculations.\n\n\nMastering
          composition takes practice, but until you do, steal it 'til you make it.\nAnalyze
          similar games to understand how they manage camera position and composition:\n\u2022
          <a href=\"https://youtu.be/2aDtbhPE3ag\">Quick Game Camera Analysis: Kirby
          and the Forgotten Land</a>\n\u2022 <a href=\"https://youtu.be/9cxPRHpvuKo\">Quick
          Game Camera Analysis: Zelda Tears Of The Kingdom</a>"
      m_Tutorial: {fileID: 0}
      m_Image: {fileID: 0}
      m_Video: {fileID: 0}
      m_CriteriaCompletion: 0
      m_Criteria:
        m_Items: []
      m_MaskingSettings:
        m_MaskingEnabled: 0
        m_UnmaskedViews: []
      m_Summary: 
      m_Description: 
      m_InstructionBoxTitle: 
      m_InstructionText: 
      m_TutorialButtonText: 
  m_CameraSettings:
    m_CameraMode: 1
    m_FocusMode: 0
    m_Orthographic: 0
    m_Size: 10
    m_Pivot: {x: -3.8249846, y: 6.47985, z: 4.302711}
    m_Rotation: {x: -0.0023974616, y: -0.45216167, z: -0.001220265, w: 0.89193237}
    m_FrameObject:
      m_SceneGuid: 
      m_GameObjectGuid: 
      m_SerializedComponentType:
        m_TypeName: 
      m_ComponentIndex: 0
      m_AssetObject: {fileID: 0}
      m_Prefab: {fileID: 0}
    m_Enabled: 0
  NextButton:
    m_Untranslated: Next
  DoneButton:
    m_Untranslated: Done
  m_CompletedSound: {fileID: 8300000, guid: 93fbb109633e844259ea828442bda0cb, type: 3}
  m_AutoAdvance: 0
  Showing:
    m_PersistentCalls:
      m_Calls: []
  Shown:
    m_PersistentCalls:
      m_Calls: []
  Staying:
    m_PersistentCalls:
      m_Calls: []
  CriteriaValidated:
    m_PersistentCalls:
      m_Calls: []
  MaskingSettingsChanged:
    m_PersistentCalls:
      m_Calls: []
  NonMaskingSettingsChanged:
    m_PersistentCalls:
      m_Calls: []
  m_OnBeforePageShown:
    m_PersistentCalls:
      m_Calls: []
  m_OnAfterPageShown:
    m_PersistentCalls:
      m_Calls: []
  m_OnTutorialPageStay:
    m_PersistentCalls:
      m_Calls: []
  m_OnBeforeTutorialQuit:
    m_PersistentCalls:
      m_Calls: []
  m_NextButton: 
  m_DoneButton: 
